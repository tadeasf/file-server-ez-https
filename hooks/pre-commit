#!/usr/bin/env python3
import sys
import subprocess
from pathlib import Path

"""
This script checks if the .env file is properly encrypted.
It will encrypt the .env file if it is not already encrypted.
It will also stage the encrypted .env file for commit.

To install the dotenvx CLI, run:
npm install -g @dotenvx/dotenvx

To include the hook in your git repo set git config core.hooksPath hooks
`git config core.hooksPath hooks`
"""
def check_env_encryption():
    env_path = Path('.env')
    
    # Check if .env exists
    if not env_path.exists():
        print("üìù No .env file found")
        return 0
    
    # Read .env content
    with open(env_path, 'r') as f:
        content = f.read()
    
    # Check for unencrypted API keys
    if 'OPENAI_API_KEY=' in content and 'encrypted:' not in content:
        print("‚ö†Ô∏è  WARNING: Unencrypted API key detected in .env")
        print("üîí Running encryption...")
        
        try:
            # Run dotenvx encrypt
            result = subprocess.run(['dotenvx', 'encrypt'], 
                                  capture_output=True, 
                                  text=True)
            
            if result.returncode != 0:
                print("‚ùå Error encrypting .env file:")
                print(result.stderr)
                return 1
                
            print("‚úÖ Successfully encrypted .env file")
            
            # Stage the encrypted .env file
            subprocess.run(['git', 'add', '.env'])
            return 0
            
        except FileNotFoundError:
            print("‚ùå Error: dotenvx command not found.")
            print("üîß Please install dotenvx CLI with: npm install -g @dotenvx/dotenvx")
            return 1
    
    print("‚úÖ .env file is properly encrypted")
    return 0

if __name__ == '__main__':
    print("üîç Running pre-commit hook for .env encryption check...")
    sys.exit(check_env_encryption())

